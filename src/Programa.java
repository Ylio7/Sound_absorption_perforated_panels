
import java.awt.Color;
import java.awt.Dimension;
import java.awt.Font;
import java.awt.event.ActionEvent;
import java.io.BufferedWriter;
import java.io.File;
import java.io.FileWriter;
import javax.swing.JFileChooser;
import javax.swing.JFrame;
import javax.swing.JOptionPane;
import javax.swing.UIManager;
import javax.swing.filechooser.FileFilter;
import javax.swing.filechooser.FileNameExtensionFilter;
import javax.swing.plaf.basic.BasicInternalFrameUI;
import javax.swing.table.DefaultTableModel;
import org.jfree.chart.ChartFactory;
import org.jfree.chart.ChartPanel;
import org.jfree.chart.JFreeChart;
import org.jfree.chart.axis.CategoryAxis;
import org.jfree.chart.axis.NumberAxis;
import org.jfree.chart.plot.CategoryPlot;
import org.jfree.chart.plot.PlotOrientation;
import org.jfree.data.category.DefaultCategoryDataset;

/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
/**
 *
 * @author Agus
 */
public class Programa extends javax.swing.JFrame {

    DefaultTableModel modelo;

    /**
     * Creates new form Programa
     */
    public Programa() {
        initComponents();
        this.setLocationRelativeTo(null);

        modelo = new DefaultTableModel();
        modelo.addColumn("<html>Frequency<br>band</html>");
        modelo.addColumn("<html>Absorbent<br>against panel</html>");
        modelo.addColumn("<html>Absorbent<br>against backing</html>");
        modelo.addColumn("No air gap");
        tblTabla.setModel(modelo);
        tblTabla.getTableHeader().setMaximumSize(new Dimension(10, 35));
        tblTabla.getTableHeader().setResizingAllowed(false);

        calcular();

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        buttonGroup1 = new javax.swing.ButtonGroup();
        jPanel9 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblTabla = new javax.swing.JTable();
        jPanel1 = new javax.swing.JPanel();
        jPanel2 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        spiEspesor = new javax.swing.JSpinner();
        jLabel6 = new javax.swing.JLabel();
        jPanel4 = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        spiDistancia = new javax.swing.JSpinner();
        jLabel13 = new javax.swing.JLabel();
        jPanel5 = new javax.swing.JPanel();
        spiRadio = new javax.swing.JSpinner();
        jLabel3 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jPanel6 = new javax.swing.JPanel();
        jLabel4 = new javax.swing.JLabel();
        spiCavidad = new javax.swing.JSpinner();
        jLabel8 = new javax.swing.JLabel();
        jPanel7 = new javax.swing.JPanel();
        jLabel5 = new javax.swing.JLabel();
        spiAbsorbente = new javax.swing.JSpinner();
        jLabel9 = new javax.swing.JLabel();
        jPanel8 = new javax.swing.JPanel();
        lblArea = new javax.swing.JLabel();
        lblAdvierte = new javax.swing.JLabel();
        jPanel10 = new javax.swing.JPanel();
        rbtnFreq1 = new javax.swing.JRadioButton();
        rbtnFreq3 = new javax.swing.JRadioButton();
        jPanel11 = new javax.swing.JPanel();
        jInternalFrame = new javax.swing.JInternalFrame();
        jPanel3 = new javax.swing.JPanel();
        jButton1 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Perforated Panel Absorption Coefficient Calculator");
        setResizable(false);

        jPanel9.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        tblTabla.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Title 1", "Title 2"
            }
        ));
        tblTabla.getTableHeader().setReorderingAllowed(false);
        jScrollPane1.setViewportView(tblTabla);
        tblTabla.getColumnModel().getSelectionModel().setSelectionMode(javax.swing.ListSelectionModel.MULTIPLE_INTERVAL_SELECTION);

        javax.swing.GroupLayout jPanel9Layout = new javax.swing.GroupLayout(jPanel9);
        jPanel9.setLayout(jPanel9Layout);
        jPanel9Layout.setHorizontalGroup(
            jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel9Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 374, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel9Layout.setVerticalGroup(
            jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel9Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 465, Short.MAX_VALUE)
                .addContainerGap())
        );

        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createEtchedBorder(), "Panel design", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.TOP, new java.awt.Font("Arial", 2, 14))); // NOI18N

        jPanel2.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        jLabel1.setText("Panel thickness");

        spiEspesor.setModel(new javax.swing.SpinnerNumberModel(12.0d, 1.0d, null, 1.0d));
        spiEspesor.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                spiEspesorStateChanged(evt);
            }
        });

        jLabel6.setFont(new java.awt.Font("Segoe UI", 2, 12)); // NOI18N
        jLabel6.setText("[mm]");

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(spiEspesor, javax.swing.GroupLayout.PREFERRED_SIZE, 64, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel6)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(spiEspesor, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel6))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jPanel4.setBorder(jPanel2.getBorder());

        jLabel2.setText("Repeat distance");

        spiDistancia.setModel(new javax.swing.SpinnerNumberModel(16.0d, null, null, 1.0d));
        spiDistancia.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                spiDistanciaStateChanged(evt);
            }
        });

        jLabel13.setFont(new java.awt.Font("Segoe UI", 2, 12)); // NOI18N
        jLabel13.setText("[mm]");

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(spiDistancia, javax.swing.GroupLayout.PREFERRED_SIZE, 64, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel13)
                .addContainerGap(15, Short.MAX_VALUE))
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(spiDistancia)
                    .addComponent(jLabel2)
                    .addComponent(jLabel13))
                .addContainerGap())
        );

        jPanel5.setBorder(jPanel2.getBorder());

        spiRadio.setModel(new javax.swing.SpinnerNumberModel(3.0d, null, null, 1.0d));
        spiRadio.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                spiRadioStateChanged(evt);
            }
        });

        jLabel3.setText("Hole radius");

        jLabel7.setFont(new java.awt.Font("Segoe UI", 2, 12)); // NOI18N
        jLabel7.setText("[mm]");

        javax.swing.GroupLayout jPanel5Layout = new javax.swing.GroupLayout(jPanel5);
        jPanel5.setLayout(jPanel5Layout);
        jPanel5Layout.setHorizontalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel3)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(spiRadio, javax.swing.GroupLayout.PREFERRED_SIZE, 66, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel7)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel5Layout.setVerticalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(spiRadio, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel7))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jPanel6.setBorder(jPanel2.getBorder());

        jLabel4.setText("Cavity depth");

        spiCavidad.setModel(new javax.swing.SpinnerNumberModel(200.0d, null, null, 1.0d));
        spiCavidad.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                spiCavidadStateChanged(evt);
            }
        });

        jLabel8.setFont(new java.awt.Font("Segoe UI", 2, 12)); // NOI18N
        jLabel8.setText("[mm]");

        javax.swing.GroupLayout jPanel6Layout = new javax.swing.GroupLayout(jPanel6);
        jPanel6.setLayout(jPanel6Layout);
        jPanel6Layout.setHorizontalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel6Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 66, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(spiCavidad, javax.swing.GroupLayout.PREFERRED_SIZE, 84, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel8)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel6Layout.setVerticalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel6Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(spiCavidad, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel8))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jPanel7.setBorder(jPanel2.getBorder());

        jLabel5.setText("Absorber thickness");

        spiAbsorbente.setModel(new javax.swing.SpinnerNumberModel(50.0d, null, null, 1.0d));
        spiAbsorbente.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                spiAbsorbenteStateChanged(evt);
            }
        });

        jLabel9.setFont(new java.awt.Font("Segoe UI", 2, 12)); // NOI18N
        jLabel9.setText("[mm]");

        javax.swing.GroupLayout jPanel7Layout = new javax.swing.GroupLayout(jPanel7);
        jPanel7.setLayout(jPanel7Layout);
        jPanel7Layout.setHorizontalGroup(
            jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel7Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 110, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(spiAbsorbente, javax.swing.GroupLayout.PREFERRED_SIZE, 72, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel9)
                .addContainerGap(18, Short.MAX_VALUE))
        );
        jPanel7Layout.setVerticalGroup(
            jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel7Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5)
                    .addComponent(spiAbsorbente, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel9))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel6, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel7, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel6, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel4, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel7, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jPanel8.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createEtchedBorder(), "Open area", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.TOP, new java.awt.Font("Arial", 2, 12))); // NOI18N

        lblArea.setFont(new java.awt.Font("Segoe UI", 2, 14)); // NOI18N
        lblArea.setText("% Área abierta:");

        lblAdvierte.setFont(new java.awt.Font("Segoe UI", 2, 10)); // NOI18N
        lblAdvierte.setForeground(java.awt.Color.red);
        lblAdvierte.setText("too high");
        lblAdvierte.setAlignmentX(100);

        javax.swing.GroupLayout jPanel8Layout = new javax.swing.GroupLayout(jPanel8);
        jPanel8.setLayout(jPanel8Layout);
        jPanel8Layout.setHorizontalGroup(
            jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel8Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(lblArea)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(lblAdvierte)
                .addGap(31, 31, 31))
        );
        jPanel8Layout.setVerticalGroup(
            jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel8Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblAdvierte)
                    .addComponent(lblArea))
                .addContainerGap())
        );

        jPanel10.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createEtchedBorder(), "Frequency bands", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.TOP, new java.awt.Font("Arial", 2, 12))); // NOI18N
        jPanel10.setPreferredSize(new java.awt.Dimension(210, 55));

        buttonGroup1.add(rbtnFreq1);
        rbtnFreq1.setText("Octaves");
        rbtnFreq1.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                rbtnFreq1StateChanged(evt);
            }
        });
        rbtnFreq1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rbtnFreq1ActionPerformed(evt);
            }
        });

        buttonGroup1.add(rbtnFreq3);
        rbtnFreq3.setSelected(true);
        rbtnFreq3.setText("1/3 Octaves");
        rbtnFreq3.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                rbtnFreq3StateChanged(evt);
            }
        });
        rbtnFreq3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rbtnFreq3ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel10Layout = new javax.swing.GroupLayout(jPanel10);
        jPanel10.setLayout(jPanel10Layout);
        jPanel10Layout.setHorizontalGroup(
            jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel10Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(rbtnFreq1)
                .addGap(18, 18, 18)
                .addComponent(rbtnFreq3)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel10Layout.setVerticalGroup(
            jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel10Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(rbtnFreq1)
                    .addComponent(rbtnFreq3))
                .addContainerGap(8, Short.MAX_VALUE))
        );

        jPanel11.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        jInternalFrame.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        jInternalFrame.setMinimumSize(new java.awt.Dimension(57, 26));
        jInternalFrame.setVisible(true);

        javax.swing.GroupLayout jInternalFrameLayout = new javax.swing.GroupLayout(jInternalFrame.getContentPane());
        jInternalFrame.getContentPane().setLayout(jInternalFrameLayout);
        jInternalFrameLayout.setHorizontalGroup(
            jInternalFrameLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
        );
        jInternalFrameLayout.setVerticalGroup(
            jInternalFrameLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 373, Short.MAX_VALUE)
        );

        javax.swing.GroupLayout jPanel11Layout = new javax.swing.GroupLayout(jPanel11);
        jPanel11.setLayout(jPanel11Layout);
        jPanel11Layout.setHorizontalGroup(
            jPanel11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel11Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jInternalFrame, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        jPanel11Layout.setVerticalGroup(
            jPanel11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel11Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jInternalFrame, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );

        jButton1.setFont(new java.awt.Font("Arial", 2, 14)); // NOI18N
        jButton1.setText("Export results");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jButton1)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jButton1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(15, 15, 15)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jPanel9, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jPanel10, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jPanel8, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(0, 259, Short.MAX_VALUE))
                            .addComponent(jPanel11, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(8, 8, 8)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jPanel10, javax.swing.GroupLayout.DEFAULT_SIZE, 64, Short.MAX_VALUE)
                            .addComponent(jPanel8, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jPanel11, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addComponent(jPanel9, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );

        jPanel1.getAccessibleContext().setAccessibleName("Panel design");

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void rbtnFreq1StateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_rbtnFreq1StateChanged
        calcular();
    }//GEN-LAST:event_rbtnFreq1StateChanged

    private void rbtnFreq3StateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_rbtnFreq3StateChanged
        calcular();
    }//GEN-LAST:event_rbtnFreq3StateChanged

    private void spiCavidadStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_spiCavidadStateChanged
        calcular();        // TODO add your handling code here:
        spiCavidad.nextFocus();
    }//GEN-LAST:event_spiCavidadStateChanged

    private void spiRadioStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_spiRadioStateChanged
        calcular();        // TODO add your handling code here:
        spiRadio.nextFocus();
    }//GEN-LAST:event_spiRadioStateChanged

    private void spiDistanciaStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_spiDistanciaStateChanged
        calcular();
        spiDistancia.nextFocus();
    }//GEN-LAST:event_spiDistanciaStateChanged

    private void spiEspesorStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_spiEspesorStateChanged
        calcular();
    }//GEN-LAST:event_spiEspesorStateChanged

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        Exporta();
    }//GEN-LAST:event_jButton1ActionPerformed

    private void spiAbsorbenteStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_spiAbsorbenteStateChanged
        calcular();        // TODO add your handling code here:
        spiAbsorbente.nextFocus();
    }//GEN-LAST:event_spiAbsorbenteStateChanged

    private void rbtnFreq3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rbtnFreq3ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_rbtnFreq3ActionPerformed

    private void rbtnFreq1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rbtnFreq1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_rbtnFreq1ActionPerformed

    private void calcular() {
        double espesorPanel = Double.parseDouble(spiEspesor.getValue().toString());
        double distanciaRepeticion = Double.parseDouble(spiDistancia.getValue().toString());
        double radioPerf = Double.parseDouble(spiRadio.getValue().toString());
        double cavidad = Double.parseDouble(spiCavidad.getValue().toString());
        double espesorAbsorbente = Double.parseDouble(spiAbsorbente.getValue().toString());

        // Ocultar barra de titulo del jInternalFrame
        BasicInternalFrameUI bi = (BasicInternalFrameUI) jInternalFrame.getUI();
        bi.setNorthPane(null);

        // Obtengo y evaluo el % de área abierta
        double areaAbierta = Math.round((Math.PI * Math.pow(radioPerf, 2)) / (Math.pow(distanciaRepeticion, 2)) * 1000);
        areaAbierta /= 10;
        double maxRadio = Math.round(distanciaRepeticion / (Math.sqrt(Math.PI)));
        double minDistancia = Math.round(radioPerf * (Math.sqrt(Math.PI)));

        // Activa/desactiva advertencia sobre % de área abierta muy elevado (se considera > 35%)
        if (areaAbierta >= 35) {
            lblArea.setForeground(Color.red);
            lblAdvierte.setVisible(true);
        } else {
            lblArea.setForeground(Color.black);
            lblAdvierte.setVisible(false);
        }

        //Limitación de radio de perf y distancia de repe. si el & de área es >= 100
        if (areaAbierta >= 100) {
            spiRadio.setModel(new javax.swing.SpinnerNumberModel(maxRadio, null, maxRadio, 0.25d));
            spiDistancia.setModel(new javax.swing.SpinnerNumberModel(minDistancia, minDistancia, null, 0.5d));

        } else {// Código principal con cálculos            

            spiRadio.setModel(new javax.swing.SpinnerNumberModel((double) spiRadio.getValue(), 0.0d, null, 0.25));
            spiDistancia.setModel(new javax.swing.SpinnerNumberModel((double) spiDistancia.getValue(), null, null, .5));

            // Limitó el espesor del absorbente y la profundiad de la cavidad según sus valores
            spiAbsorbente.setModel(new javax.swing.SpinnerNumberModel((double) spiAbsorbente.getValue(), 0.0d, (double) spiCavidad.getValue(), 5.0d));
            spiCavidad.setModel(new javax.swing.SpinnerNumberModel((double) spiCavidad.getValue(), (double) spiAbsorbente.getValue(), null, 5.0d));
            lblArea.setText(areaAbierta + "%");

            //Borro tabla de abajo hacia arriba
            int fila = tblTabla.getRowCount();
            for (int i = fila - 1; i >= 0; i--) {
                modelo.removeRow(i);
            }

            // Adquiero la fraccion de freq de los radiobuttons
            // Creo y seteo el string Dominio que usaré para los gráficos
            int fraccion = 0;
            String dominio = "";
            if (rbtnFreq1.isSelected()) {
                fraccion = 1;
                dominio = "Octave band [Hz]";
            }
            if (rbtnFreq3.isSelected()) {
                fraccion = 3;
                dominio = "1/3 Octave band [Hz]";
            }

            // Instancio el perforado y obtengo sus coeficientes para las tres configuraciones y sus freq
            Panel P = new Panel(espesorPanel, distanciaRepeticion, radioPerf, cavidad, espesorAbsorbente, fraccion);

            double abs1[] = P.abs1();
            double abs2[] = P.abs2();
            double abs3[] = P.abs3();
            double freq[] = P.getFreq();

            // Creo las series que se usarán para graficar
            final String seriesAbs1 = "Absorbent against panel";
            final String seriesAbs2 = "Absorbent against backing";
            final String seriesAbs3 = "No air gap";

            // Creo el dataset que contendrá las 3 series
            DefaultCategoryDataset dataset = new DefaultCategoryDataset();

            // Creo el String type para los ticks labels
            String type;

            // Creo el objeto filas que usaré para llenar la tabla
            Object[] filas = new Object[4];

            // Lleno la tabla y las series a graficar
            for (int i = 0; i < P.getFreq().length; i++) {

                // Oculto el "." excepto en 31.5 Hz
                // Convierto labeles miles en K
                if ((freq[i] - (int) freq[i]) == 0) {
                    filas[0] = String.valueOf((int) freq[i]) + " Hz";
                    if (freq[i] < 1000) {
                        type = Integer.toString((int) freq[i]);
                    } else {
                        type = Integer.toString((int) freq[i] / 1000) + "K";
                    }
                } else {
                    filas[0] = String.valueOf(freq[i]) + " Hz";
                    type = Double.toString(freq[i]);
                }
                filas[1] = abs1[i];
                filas[2] = abs2[i];
                filas[3] = abs3[i];
                modelo.addRow(filas);

                //Lleno el dataset con las 3 series
                dataset.addValue(abs1[i], seriesAbs1, type);
                dataset.addValue(abs2[i], seriesAbs2, type);
                dataset.addValue(abs3[i], seriesAbs3, type);
            }

            // Seteo el gráfico
            JFreeChart chart = ChartFactory.createLineChart(
                    "Absorption coefficients of perforated panels",
                    dominio,
                    "",
                    dataset,
                    PlotOrientation.VERTICAL,
                    true,
                    true,
                    false
            );

            // Formato al título
            chart.getTitle().setFont(new Font("Arial", Font.BOLD, 16));

            // Creo el Panel para meterle el JFreeChart
            ChartPanel chartPanel = new ChartPanel(chart);
            chartPanel.setChart(chart);

            // Creo y le doy formato al plot de categorías
            CategoryPlot plot = (CategoryPlot) chart.getPlot();
            plot.setBackgroundPaint(Color.white);
            plot.setRangeGridlinePaint(Color.gray);
            plot.setDomainGridlinePaint(Color.gray);
            plot.setDomainGridlinesVisible(true);

            // Creo y le doy formato a los ejes del plot
            CategoryAxis ejeX = (CategoryAxis) plot.getDomainAxis();
            NumberAxis ejeY = (NumberAxis) plot.getRangeAxis();
            Font fuente = new Font("Arial", 1, 10);
            ejeX.setTickLabelFont(fuente);
            ejeY.setTickLabelFont(fuente);
            ejeY.setRange(0, 1);

            // Meto el Panel en el jInternalFrame
            jInternalFrame.setContentPane(chartPanel);
            jInternalFrame.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);

        }

    }

    private void Exporta() {
        String[] formatos = {"Clipboard", "Text file"};
        int opcion = JOptionPane.showOptionDialog(null, "Send results to", "Export", 0, JOptionPane.QUESTION_MESSAGE, null, formatos, "Clipboard");
        switch (opcion) {
            case 0: // Portapapeles

                ActionEvent evn = new ActionEvent(tblTabla, ActionEvent.ACTION_PERFORMED, "copy");
                // como el método comun no me toma los headers, agrego una fila superior con eso y luego la borro
                modelo.insertRow(0,new Object[]{"Frequency band", "Absorbent against panel", "Absorbent against backing", "No air gap"});
                tblTabla.selectAll();
                tblTabla.getActionMap().get(evn.getActionCommand()).actionPerformed(evn);
                tblTabla.clearSelection();
                modelo.removeRow(0);
                
                JOptionPane.showMessageDialog(null, "Data copied to clipboard", "Export", JOptionPane.INFORMATION_MESSAGE);
                break;

            case 1: // Archivo .txt
                JFileChooser fileChooser = new JFileChooser();

                FileFilter filter = new FileNameExtensionFilter("*.txt", "txt");
                fileChooser.setCurrentDirectory(new java.io.File("."));

                fileChooser.setDialogTitle("Save text file");
                fileChooser.setFileSelectionMode(JFileChooser.FILES_ONLY);
                fileChooser.setAcceptAllFileFilterUsed(false);
                fileChooser.setFileFilter(filter);
                fileChooser.setSelectedFile(new File("Absorption coefficients of perforated panel.txt"));

                int seleccion = fileChooser.showSaveDialog(jPanel1);

                if (seleccion == JFileChooser.APPROVE_OPTION) {

                    try {
                        FileWriter fw;

                        // Si el archivo ya esxiste, me aseguro de sobreescribirlo sin volver a agregarle la extension .txt
                        if (fileChooser.getSelectedFile().exists()) {
                            //  Preguntar para sobreescribir

                            String[] si_no = {"Yes", "No"};
                            int ans = JOptionPane.showOptionDialog(null, "The file already exists. Overwrite?", "Overwrite", 0, JOptionPane.QUESTION_MESSAGE, null, si_no, "Yes");
                            System.out.println(ans);

                            if (ans == JOptionPane.YES_OPTION) {
                                fw = new FileWriter(fileChooser.getSelectedFile());
                                // Creo el buffer de escritura
                                BufferedWriter bw = new BufferedWriter(fw);

                                // Nombro las columnas y las tabulo (\t)
                                bw.write("Frequency band" + "\t");
                                bw.write("Absorbent against panel" + "\t");
                                bw.write("Absorbent against backing" + "\t");
                                bw.write("No air gap" + "\n");

                                // Leo las filas
                                for (int i = 0; i < tblTabla.getRowCount(); i++) {
                                    // Leo las columnas y escribo el buffer tabulado 
                                    for (int j = 0; j < tblTabla.getColumnCount(); j++) {
                                        bw.write(tblTabla.getModel().getValueAt(i, j) + "\t");
                                    }
                                    // Salto de fila
                                    bw.write("\n");
                                }
                                // Cierro el buffer y el FileWriter
                                bw.close();
                                fw.close();
                            }

                        } else {
                            // Creo el buffer de escritura
                            fw = new FileWriter(fileChooser.getSelectedFile() + ".txt");
                            BufferedWriter bw = new BufferedWriter(fw);

                            // Nombro las columnas y las tabulo (\t)
                            bw.write("Frequency band" + "\t");
                            bw.write("Absorbent against panel" + "\t");
                            bw.write("Absorbent against backing" + "\t");
                            bw.write("No air gap" + "\n");

                            // Leo las filas
                            for (int i = 0; i < tblTabla.getRowCount(); i++) {
                                // Leo las columnas y escribo el buffer tabulado 
                                for (int j = 0; j < tblTabla.getColumnCount(); j++) {
                                    bw.write(tblTabla.getModel().getValueAt(i, j) + "\t");
                                }
                                // Salto de fila
                                bw.write("\n");
                            }
                            // Cierro el buffer y el FileWriter
                            bw.close();
                            fw.close();
                        }

                    } catch (Exception ex) {
                        ex.printStackTrace();
                    }
                }
                break;

        }
    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Programa.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Programa.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Programa.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Programa.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                try {
                    UIManager.setLookAndFeel(UIManager.getSystemLookAndFeelClassName());
                } catch (Exception ignored) {
                }
                new Programa().setVisible(true);

            }
        });

    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.JButton jButton1;
    private javax.swing.JInternalFrame jInternalFrame;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel10;
    private javax.swing.JPanel jPanel11;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JPanel jPanel6;
    private javax.swing.JPanel jPanel7;
    private javax.swing.JPanel jPanel8;
    private javax.swing.JPanel jPanel9;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel lblAdvierte;
    private javax.swing.JLabel lblArea;
    private javax.swing.JRadioButton rbtnFreq1;
    private javax.swing.JRadioButton rbtnFreq3;
    private javax.swing.JSpinner spiAbsorbente;
    private javax.swing.JSpinner spiCavidad;
    private javax.swing.JSpinner spiDistancia;
    private javax.swing.JSpinner spiEspesor;
    private javax.swing.JSpinner spiRadio;
    private javax.swing.JTable tblTabla;
    // End of variables declaration//GEN-END:variables

}
